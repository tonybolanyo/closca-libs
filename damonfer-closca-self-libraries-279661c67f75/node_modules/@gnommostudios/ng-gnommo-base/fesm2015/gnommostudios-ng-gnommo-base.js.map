{"version":3,"file":"gnommostudios-ng-gnommo-base.js.map","sources":["ng://@gnommostudios/ng-gnommo-base/lib/gnommo-base/storage/cookie.handler.ts","ng://@gnommostudios/ng-gnommo-base/lib/gnommo-base/storage/local-storage.handler.ts","ng://@gnommostudios/ng-gnommo-base/lib/gnommo-base/storage/storage.handler.ts","ng://@gnommostudios/ng-gnommo-base/lib/gnommo-base/services/core/base.service.ts","ng://@gnommostudios/ng-gnommo-base/lib/gnommo-base/services/core/login-base.service.ts","ng://@gnommostudios/ng-gnommo-base/lib/gnommo-base/models/auth-token.model.ts","ng://@gnommostudios/ng-gnommo-base/lib/gnommo-base/services/core/auth.service.ts","ng://@gnommostudios/ng-gnommo-base/lib/gnommo-base/helpers/auth.interceptor.ts","ng://@gnommostudios/ng-gnommo-base/lib/gnommo-base/helpers/error.interceptor.ts","ng://@gnommostudios/ng-gnommo-base/lib/gnommo-base/models/base.model.ts","ng://@gnommostudios/ng-gnommo-base/lib/gnommo-base/gnommo-base.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nexport interface CookieInterface {\n    [key: string]: any;\n}\n\n@Injectable()\nexport class CookieHandler {\n  private cookies: CookieInterface = {};\n\n  get(key: string): any {\n    if (!this.cookies[key]) {\n      const cookie = window.document\n                         .cookie.split('; ')\n                         .filter((item: any) => item.split('=')[0] === key).pop();\n      if (!cookie) {\n        return null;\n      }\n\n      this.cookies[key] = this.parse(cookie.split('=').slice(1).join('='));\n    }\n\n    return this.cookies[key];\n  }\n\n  set(key: string, value: any, expires?: Date): void {\n    this.cookies[key] = value;\n    const cookie = `${key}=${encodeURI(value)}; path=/${expires ? `; expires=${ expires.toUTCString() }` : ''}`;\n    window.document.cookie = cookie;\n  }\n\n  remove(key: string) {\n    document.cookie = key + '=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n    delete this.cookies[key];\n  }\n\n  private parse(value: any) {\n    try {\n        return JSON.parse(decodeURI(value));\n    } catch (e) {\n        return value;\n    }\n  }\n}\n","\n\nexport class LocalStorageHandler {\n    get(key: string): any {\n        const data: string = localStorage.getItem(key);\n        return this.parse(data);\n    }\n\n    set(key: string, value: any, expires?: Date): void {\n        localStorage.setItem(\n            key,\n            typeof value === 'object' ? JSON.stringify(value) : value\n        );\n    }\n\n    remove(key: string): void {\n        if (localStorage[key]) {\n            localStorage.removeItem(key);\n        }\n    }\n\n    private parse(value: any) {\n        try {\n            return JSON.parse(value);\n        } catch (e) {\n            return value;\n        }\n    }\n}\n","\nexport class BaseStorage {\n    get(key: string): anyÂ {}\n    set(key: string, value: any, expires?: Date): void {}\n    remove(key: string): void {}\n}\n\nexport class CookieStorage extends BaseStorageÂ {}\nexport class WebLocalStorage extends BaseStorage {}\n","import { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Injectable, Inject } from '@angular/core';\nimport { BaseModel } from '../../models/base.model';\nimport { HttpHeaders, HttpClient, HttpErrorResponse } from '@angular/common/http';\n\n\n@Injectable()\nexport abstract class BaseService<T extends BaseModel>  {\n    httpOptions = {\n        headers: new HttpHeaders({\n            // tslint:disable-next-line:max-line-length\n            'Accept': '*',\n            'Content-type': 'application/json',\n        })\n    };\n    constructor(\n        @Inject(HttpClient) protected http: HttpClient,\n        @Inject('url') protected url: string,\n        @Inject('endpoint') protected endpoint: string,\n\n        // private url: string,\n    ) {\n\n    }\n\n    public getAll(headers?): Observable<T[]> {\n        return this.http.get(`${this.url}/${this.endpoint}`, this.createHttpHeaders(headers))\n            .pipe(\n                map((data: T[]) => data),\n            )\n            ;\n    }\n\n    public getById(_id: string, headers?): Observable<T> {\n        return this.http.get(`${this.url}/${this.endpoint}/${_id}`, this.createHttpHeaders(headers))\n            .pipe(\n                map((data: T) => data),\n            );\n    }\n\n    public create(item: T, headers?): Observable<T> {\n        return this.http.post<T>(`${this.url}/${this.endpoint}`, item, this.createHttpHeaders(headers))\n            .pipe(\n                map((data: T) => data)\n            );\n    }\n\n    public update(_id: string, item: T, headers?): Observable<T> {\n        item._id = _id;\n        return this.http.patch<T>(`${this.url}/${this.endpoint}`, item, this.createHttpHeaders(headers))\n            .pipe(\n                map((data: T) => data),\n            );\n    }\n\n    public updateComplete(_id: string, item: T, headers?): Observable<T> {\n        item._id = _id;\n        return this.http.put<T>(`${this.url}/${this.endpoint}`, item, this.createHttpHeaders(headers))\n            .pipe(\n                map((data: T) => data),\n            );\n    }\n\n    public delete(_id: string, headers?): Observable<any> {\n        return this.http.delete<T>(`${this.url}/${this.endpoint}/${_id}`, this.createHttpHeaders(headers))\n            .pipe(\n                map((data: T) => data)\n            );\n    }\n\n    public createHttpHeaders(headers?) {\n        const httpOptions = Object.assign({}, this.httpOptions);\n        if (headers) {\n            Object.keys(headers).forEach((headerKey) => {\n                httpOptions.headers = httpOptions.headers.append(headerKey, headers[headerKey]);\n            });\n        }\n        return httpOptions;\n    }\n\n    public httpHeadersWithoutAuth(headers?) {\n        const httpOptions = {\n            headers: new HttpHeaders({\n                'Accept': '*',\n                'Content-type': 'application/json',\n                'X-Skip-Interceptor': ''\n            })\n        };\n\n        if (headers) {\n            Object.keys(headers).forEach((headerKey) => {\n                httpOptions.headers = httpOptions.headers.append(headerKey, headers[headerKey]);\n            });\n        }\n        return httpOptions;\n    }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BaseModel } from '../../models/base.model';\nimport { BaseService } from './base.service';\n\n@Injectable()\nexport class LoginBaseService<T extends BaseModel> extends BaseService<T> {\n\n    constructor(\n        @Inject(HttpClient) protected http: HttpClient,\n        @Inject('url') protected url: string,\n        @Inject('endpoint') protected endpoint: string,\n    ) {\n        super(\n            http, url, endpoint\n        );\n\n    }\n    public login(credentials, headers?): Observable<any> {\n        return this.http.post<any>(`${this.url}/${this.endpoint}/login`, credentials, this.httpHeadersWithoutAuth(headers))\n            .pipe(\n                map((data) => data)\n            );\n    }\n\n    public passwordRecovery(email, headers?): Observable<any> {\n        return this.http.post<any>(`${this.url}/${this.endpoint}/password-recovery`, email, this.httpHeadersWithoutAuth(headers))\n            .pipe(\n                map((data) => data)\n            );\n    }\n    public resetPassword(newPassword, hash, headers?): Observable<any> {\n        return this.http.post<any>(`${this.url}/${this.endpoint}/reset-password`,\n            { 'newPassword': newPassword, 'hash': hash }, this.httpHeadersWithoutAuth(headers))\n            .pipe(\n                map((data) => data)\n            );\n    }\n\n    public getCurrentUser(token, headers?): Observable<T> {\n        return this.http.get(this.url + '/users-me', this.createHttpHeaders(headers))\n        .pipe(map((data: any) => data));\n    }\n\n    public register(item: T, headers?): Observable<T> {\n        return this.http.post<any>(`${this.url}/${this.endpoint}/register`, item , this.httpHeadersWithoutAuth(headers))\n            .pipe(\n                map((data: any) => data)\n            );\n    }\n\n}\n","import { AuthTokenInterface } from '../interfaces/auth-token.interface';\n\nexport class AuthToken implements AuthTokenInterface {\n    id = null;\n    ttl = null;\n    created = null;\n    userId = null;\n\n    constructor(data?: AuthTokenInterface) {\n        Object.assign(this, data);\n    }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { CookieStorage } from '../../storage/storage.handler';\nimport { AuthToken } from '../../models/auth-token.model';\n\nconst TOKEN_ID = 'token_id';\nconst TOKEN_TTL = 'token_ttl';\nconst TOKEN_CREATED = 'token_created';\n\n\n@Injectable()\nexport class AuthService {\n\n    private token = new AuthToken();\n\n    constructor(@Inject(CookieStorage) protected storage: CookieStorage) {\n        this.token.id = this.storage.get(TOKEN_ID);\n        this.token.ttl = this.storage.get(TOKEN_TTL);\n        this.token.created = this.storage.get(TOKEN_CREATED);\n    }\n\n    public getToken(): AuthToken {\n        return <AuthToken>this.token;\n    }\n\n    public setToken(tokenId: string) {\n        const token = new AuthToken();\n        token.id = tokenId;\n        this.persist(TOKEN_ID, token.id, this.expiresTime());\n        this.persist(TOKEN_TTL, this.expiresTime(), this.expiresTime());\n        this.persist(TOKEN_CREATED, new Date(), this.expiresTime());\n        token.ttl = this.expiresTime();\n        token.created = new Date();\n        this.token = Object.assign({}, this.token, token);\n    }\n\n    public removeToken() {\n        this.storage.remove(TOKEN_ID);\n        this.storage.remove(TOKEN_TTL);\n        this.storage.remove(TOKEN_CREATED);\n        this.token = new AuthToken();\n    }\n\n    public persist(token_property: string, value: any, expires?: Date) {\n        try {\n            this.storage.set(\n                `${token_property}`,\n                (typeof value === 'object') ? JSON.stringify(value) : value,\n                expires ? expires : null\n            );\n        } catch (err) {\n            // console.error('Cannot access local/session storage:', err);\n        }\n    }\n\n    public expiresTime() {\n        const today = new Date();\n        return this.addDays(today, 3);\n    }\n\n    private addDays(date, days) {\n        const result = new Date(date);\n        result.setDate(result.getDate() + days);\n        return result;\n    }\n\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { AuthService } from '../services/core/auth.service';\n\n\nexport const InterceptorSkipHeader = 'X-Skip-Interceptor';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n    constructor(\n        private authService: AuthService) {}\n\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\n        // Get the auth token from the cookieStorage.\n        const token = this.authService.getToken();\n        const authToken = `Bearer ${token.id}`; // get TOKEN\n\n        // Clone request and update with Auth\n        if (req.headers.has(InterceptorSkipHeader)) {\n            const noAuthReq = req.clone({\n                headers: req.headers.delete(InterceptorSkipHeader)\n            });\n            return next.handle(noAuthReq);\n        }\n\n        const authReq = req.clone({\n            headers: req.headers.set('Authorization', authToken)\n        });\n\n        // send cloned request with header to the next handler.\n        return next.handle(authReq);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AuthService } from '../services/core/auth.service';\n\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private authService: AuthService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n        return next.handle(request).pipe(catchError(error => {\n            let errorMsg;\n            if (error.status === 401) {\n                // auto logout if 401 response returned from api\n                // location.reload(true);\n                this.authService.removeToken();\n                errorMsg = `Error: No tiene autorizaciÃ³n`;\n            } else {\n                errorMsg = error.error.message || error.statusText;\n            }\n            return throwError(error);\n        }));\n    }\n\n}\n","\n\nexport class BaseModel {\n    _id: string;\n    instance: any;\n}\n","import { NgModule } from '@angular/core';\nimport { ModuleWithProviders } from '@angular/compiler/src/core';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\n// import { AuthInterceptor, ErrorInterceptor } from './helpers';\nimport { CommonModule } from '@angular/common';\nimport { BaseService } from './services/core/base.service';\nimport { AuthService } from './services/core/auth.service';\nimport { LoginBaseService } from './services/core/login-base.service';\nimport { AuthInterceptor } from './helpers/auth.interceptor';\nimport { ErrorInterceptor } from './helpers/error.interceptor';\nimport { WebLocalStorage, CookieStorage } from './storage/storage.handler';\nimport { LocalStorageHandler } from './storage/local-storage.handler';\nimport { CookieHandler } from './storage/cookie.handler';\n\n@NgModule({\n  imports: [CommonModule, HttpClientModule],\n})\nexport class GnommoBaseModule {\n  static forRoot({ }): ModuleWithProviders {\n    return {\n      ngModule: GnommoBaseModule,\n      providers: [\n        // Services\n         BaseService,\n         AuthService,\n         LoginBaseService,\n\n        // // Interceptors\n        { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n        { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n\n        // // Storage\n        { provide: WebLocalStorage, useClass: LocalStorageHandler },\n        { provide: CookieStorage, useClass: CookieHandler }\n\n      ]\n    };\n  }\n}\n\n// export * from './interfaces';\n// export * from './helpers';\n// export * from './models';\n// export * from './services';\n// export * from './storage';\n\n"],"names":[],"mappings":"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"}
